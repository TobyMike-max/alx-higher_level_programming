# 3-say_my_name.txt

===========================
How to use 3-say_my_name.py
===========================

This module defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::
    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Tobi", "Osinubi")
    My name is Tobi Osinubi

::
    >>> say_my_name("Vladmir", "Putin")
    My name is Vladmir Putin


The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Kehinde")
    My name is Kehinde 

Invalid Names
=============


The parameters ``first_name`` and ``last_name`` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(6, "Kelvin")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Kelvin", ["Harts", "Heat", "Loopers"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Alicia": 20, "Frank": 43}, 34.10)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string


At least one parameter must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
